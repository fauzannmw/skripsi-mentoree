// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Mentor {
  id                 String          @id @default(cuid())
  nim                String          @unique
  email              String          @unique
  name               String
  major              String?
  phone_number       String?
  image              String?
  gender             String?
  description        String?
  course             Course[]
  course_day         Day[]
  mentoring_location Location[]
  experience         Experience[]
  certification      Certification[]
  transaction        Transaction[]
}

model Course {
  id        Int     @id @default(autoincrement())
  Mentor    Mentor? @relation(fields: [mentorNim], references: [nim])
  mentorNim String?
  course    String
}

model Experience {
  id        Int     @id @default(autoincrement())
  Mentor    Mentor? @relation(fields: [mentorNim], references: [nim])
  mentorNim String?
  position  String
  company   String
}

model Certification {
  id          Int     @id @default(autoincrement())
  Mentor      Mentor? @relation(fields: [mentorNim], references: [nim])
  mentorNim   String?
  course      String
  institution String
}

model Location {
  id       Int      @id @default(autoincrement())
  location String
  mentor   Mentor[]
}

model Day {
  id        Int     @id @default(autoincrement())
  Mentor    Mentor? @relation(fields: [mentorNim], references: [nim])
  mentorNim String?
  day       String
  time      String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction {
  id              String   @id @default(cuid())
  User            User?    @relation(fields: [userEmail], references: [email])
  mentor          Mentor?  @relation(fields: [mentorNim], references: [nim])
  userEmail       String
  mentorNim       String?
  date            String?
  time            String?
  location        String?
  location_detail String?
  participant     String?
  mentoring_topic String?
  message         String?
  review          String?
  status          String?  @default("Belum diterima Mentor")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id            String        @id @default(cuid())
  name          String
  nim           String?       @unique
  email         String        @unique
  emailVerified DateTime?
  phone_number  String?
  major         String?
  image         String
  role          String
  coin          Int?          @default(0)
  accounts      Account[]
  sessions      Session[]
  transaction   Transaction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
